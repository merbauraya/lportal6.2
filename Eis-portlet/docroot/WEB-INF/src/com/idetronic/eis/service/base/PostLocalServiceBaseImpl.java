/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.idetronic.eis.service.base;

import com.idetronic.eis.model.Post;
import com.idetronic.eis.service.PostLocalService;
import com.idetronic.eis.service.persistence.FacultyPersistence;
import com.idetronic.eis.service.persistence.FacultyTypePersistence;
import com.idetronic.eis.service.persistence.ItemMediumPersistence;
import com.idetronic.eis.service.persistence.ItemTypeCategoryPersistence;
import com.idetronic.eis.service.persistence.LibraryPersistence;
import com.idetronic.eis.service.persistence.LibraryTypePersistence;
import com.idetronic.eis.service.persistence.LoanPersistence;
import com.idetronic.eis.service.persistence.NonPrintedItemTypePersistence;
import com.idetronic.eis.service.persistence.PostCategoryPersistence;
import com.idetronic.eis.service.persistence.PostGradePersistence;
import com.idetronic.eis.service.persistence.PostPersistence;
import com.idetronic.eis.service.persistence.PrintedItemTypePersistence;
import com.idetronic.eis.service.persistence.ProjectActivityPersistence;
import com.idetronic.eis.service.persistence.ProjectPersistence;
import com.idetronic.eis.service.persistence.ProjectResourcePersistence;
import com.idetronic.eis.service.persistence.ProjectResourceTypePersistence;
import com.idetronic.eis.service.persistence.ProjectStrategyPersistence;
import com.idetronic.eis.service.persistence.StatePersistence;
import com.idetronic.eis.service.persistence.UserLibraryPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.model.PersistedModel;
import com.liferay.portal.service.BaseLocalServiceImpl;
import com.liferay.portal.service.PersistedModelLocalServiceRegistryUtil;
import com.liferay.portal.service.persistence.UserPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the post local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.idetronic.eis.service.impl.PostLocalServiceImpl}.
 * </p>
 *
 * @author Mazlan Mat
 * @see com.idetronic.eis.service.impl.PostLocalServiceImpl
 * @see com.idetronic.eis.service.PostLocalServiceUtil
 * @generated
 */
public abstract class PostLocalServiceBaseImpl extends BaseLocalServiceImpl
	implements PostLocalService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.idetronic.eis.service.PostLocalServiceUtil} to access the post local service.
	 */

	/**
	 * Adds the post to the database. Also notifies the appropriate model listeners.
	 *
	 * @param post the post
	 * @return the post that was added
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public Post addPost(Post post) throws SystemException {
		post.setNew(true);

		return postPersistence.update(post);
	}

	/**
	 * Creates a new post with the primary key. Does not add the post to the database.
	 *
	 * @param postId the primary key for the new post
	 * @return the new post
	 */
	@Override
	public Post createPost(long postId) {
		return postPersistence.create(postId);
	}

	/**
	 * Deletes the post with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param postId the primary key of the post
	 * @return the post that was removed
	 * @throws PortalException if a post with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public Post deletePost(long postId) throws PortalException, SystemException {
		return postPersistence.remove(postId);
	}

	/**
	 * Deletes the post from the database. Also notifies the appropriate model listeners.
	 *
	 * @param post the post
	 * @return the post that was removed
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public Post deletePost(Post post) throws SystemException {
		return postPersistence.remove(post);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(Post.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery)
		throws SystemException {
		return postPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.idetronic.eis.model.impl.PostModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end)
		throws SystemException {
		return postPersistence.findWithDynamicQuery(dynamicQuery, start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.idetronic.eis.model.impl.PostModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end,
		OrderByComparator orderByComparator) throws SystemException {
		return postPersistence.findWithDynamicQuery(dynamicQuery, start, end,
			orderByComparator);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery)
		throws SystemException {
		return postPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) throws SystemException {
		return postPersistence.countWithDynamicQuery(dynamicQuery, projection);
	}

	@Override
	public Post fetchPost(long postId) throws SystemException {
		return postPersistence.fetchByPrimaryKey(postId);
	}

	/**
	 * Returns the post with the primary key.
	 *
	 * @param postId the primary key of the post
	 * @return the post
	 * @throws PortalException if a post with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public Post getPost(long postId) throws PortalException, SystemException {
		return postPersistence.findByPrimaryKey(postId);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException, SystemException {
		return postPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the posts.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.idetronic.eis.model.impl.PostModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of posts
	 * @param end the upper bound of the range of posts (not inclusive)
	 * @return the range of posts
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public List<Post> getPosts(int start, int end) throws SystemException {
		return postPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of posts.
	 *
	 * @return the number of posts
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public int getPostsCount() throws SystemException {
		return postPersistence.countAll();
	}

	/**
	 * Updates the post in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param post the post
	 * @return the post that was updated
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public Post updatePost(Post post) throws SystemException {
		return postPersistence.update(post);
	}

	/**
	 * Returns the faculty local service.
	 *
	 * @return the faculty local service
	 */
	public com.idetronic.eis.service.FacultyLocalService getFacultyLocalService() {
		return facultyLocalService;
	}

	/**
	 * Sets the faculty local service.
	 *
	 * @param facultyLocalService the faculty local service
	 */
	public void setFacultyLocalService(
		com.idetronic.eis.service.FacultyLocalService facultyLocalService) {
		this.facultyLocalService = facultyLocalService;
	}

	/**
	 * Returns the faculty remote service.
	 *
	 * @return the faculty remote service
	 */
	public com.idetronic.eis.service.FacultyService getFacultyService() {
		return facultyService;
	}

	/**
	 * Sets the faculty remote service.
	 *
	 * @param facultyService the faculty remote service
	 */
	public void setFacultyService(
		com.idetronic.eis.service.FacultyService facultyService) {
		this.facultyService = facultyService;
	}

	/**
	 * Returns the faculty persistence.
	 *
	 * @return the faculty persistence
	 */
	public FacultyPersistence getFacultyPersistence() {
		return facultyPersistence;
	}

	/**
	 * Sets the faculty persistence.
	 *
	 * @param facultyPersistence the faculty persistence
	 */
	public void setFacultyPersistence(FacultyPersistence facultyPersistence) {
		this.facultyPersistence = facultyPersistence;
	}

	/**
	 * Returns the faculty type local service.
	 *
	 * @return the faculty type local service
	 */
	public com.idetronic.eis.service.FacultyTypeLocalService getFacultyTypeLocalService() {
		return facultyTypeLocalService;
	}

	/**
	 * Sets the faculty type local service.
	 *
	 * @param facultyTypeLocalService the faculty type local service
	 */
	public void setFacultyTypeLocalService(
		com.idetronic.eis.service.FacultyTypeLocalService facultyTypeLocalService) {
		this.facultyTypeLocalService = facultyTypeLocalService;
	}

	/**
	 * Returns the faculty type remote service.
	 *
	 * @return the faculty type remote service
	 */
	public com.idetronic.eis.service.FacultyTypeService getFacultyTypeService() {
		return facultyTypeService;
	}

	/**
	 * Sets the faculty type remote service.
	 *
	 * @param facultyTypeService the faculty type remote service
	 */
	public void setFacultyTypeService(
		com.idetronic.eis.service.FacultyTypeService facultyTypeService) {
		this.facultyTypeService = facultyTypeService;
	}

	/**
	 * Returns the faculty type persistence.
	 *
	 * @return the faculty type persistence
	 */
	public FacultyTypePersistence getFacultyTypePersistence() {
		return facultyTypePersistence;
	}

	/**
	 * Sets the faculty type persistence.
	 *
	 * @param facultyTypePersistence the faculty type persistence
	 */
	public void setFacultyTypePersistence(
		FacultyTypePersistence facultyTypePersistence) {
		this.facultyTypePersistence = facultyTypePersistence;
	}

	/**
	 * Returns the item medium local service.
	 *
	 * @return the item medium local service
	 */
	public com.idetronic.eis.service.ItemMediumLocalService getItemMediumLocalService() {
		return itemMediumLocalService;
	}

	/**
	 * Sets the item medium local service.
	 *
	 * @param itemMediumLocalService the item medium local service
	 */
	public void setItemMediumLocalService(
		com.idetronic.eis.service.ItemMediumLocalService itemMediumLocalService) {
		this.itemMediumLocalService = itemMediumLocalService;
	}

	/**
	 * Returns the item medium remote service.
	 *
	 * @return the item medium remote service
	 */
	public com.idetronic.eis.service.ItemMediumService getItemMediumService() {
		return itemMediumService;
	}

	/**
	 * Sets the item medium remote service.
	 *
	 * @param itemMediumService the item medium remote service
	 */
	public void setItemMediumService(
		com.idetronic.eis.service.ItemMediumService itemMediumService) {
		this.itemMediumService = itemMediumService;
	}

	/**
	 * Returns the item medium persistence.
	 *
	 * @return the item medium persistence
	 */
	public ItemMediumPersistence getItemMediumPersistence() {
		return itemMediumPersistence;
	}

	/**
	 * Sets the item medium persistence.
	 *
	 * @param itemMediumPersistence the item medium persistence
	 */
	public void setItemMediumPersistence(
		ItemMediumPersistence itemMediumPersistence) {
		this.itemMediumPersistence = itemMediumPersistence;
	}

	/**
	 * Returns the item type category local service.
	 *
	 * @return the item type category local service
	 */
	public com.idetronic.eis.service.ItemTypeCategoryLocalService getItemTypeCategoryLocalService() {
		return itemTypeCategoryLocalService;
	}

	/**
	 * Sets the item type category local service.
	 *
	 * @param itemTypeCategoryLocalService the item type category local service
	 */
	public void setItemTypeCategoryLocalService(
		com.idetronic.eis.service.ItemTypeCategoryLocalService itemTypeCategoryLocalService) {
		this.itemTypeCategoryLocalService = itemTypeCategoryLocalService;
	}

	/**
	 * Returns the item type category remote service.
	 *
	 * @return the item type category remote service
	 */
	public com.idetronic.eis.service.ItemTypeCategoryService getItemTypeCategoryService() {
		return itemTypeCategoryService;
	}

	/**
	 * Sets the item type category remote service.
	 *
	 * @param itemTypeCategoryService the item type category remote service
	 */
	public void setItemTypeCategoryService(
		com.idetronic.eis.service.ItemTypeCategoryService itemTypeCategoryService) {
		this.itemTypeCategoryService = itemTypeCategoryService;
	}

	/**
	 * Returns the item type category persistence.
	 *
	 * @return the item type category persistence
	 */
	public ItemTypeCategoryPersistence getItemTypeCategoryPersistence() {
		return itemTypeCategoryPersistence;
	}

	/**
	 * Sets the item type category persistence.
	 *
	 * @param itemTypeCategoryPersistence the item type category persistence
	 */
	public void setItemTypeCategoryPersistence(
		ItemTypeCategoryPersistence itemTypeCategoryPersistence) {
		this.itemTypeCategoryPersistence = itemTypeCategoryPersistence;
	}

	/**
	 * Returns the library local service.
	 *
	 * @return the library local service
	 */
	public com.idetronic.eis.service.LibraryLocalService getLibraryLocalService() {
		return libraryLocalService;
	}

	/**
	 * Sets the library local service.
	 *
	 * @param libraryLocalService the library local service
	 */
	public void setLibraryLocalService(
		com.idetronic.eis.service.LibraryLocalService libraryLocalService) {
		this.libraryLocalService = libraryLocalService;
	}

	/**
	 * Returns the library persistence.
	 *
	 * @return the library persistence
	 */
	public LibraryPersistence getLibraryPersistence() {
		return libraryPersistence;
	}

	/**
	 * Sets the library persistence.
	 *
	 * @param libraryPersistence the library persistence
	 */
	public void setLibraryPersistence(LibraryPersistence libraryPersistence) {
		this.libraryPersistence = libraryPersistence;
	}

	/**
	 * Returns the library type local service.
	 *
	 * @return the library type local service
	 */
	public com.idetronic.eis.service.LibraryTypeLocalService getLibraryTypeLocalService() {
		return libraryTypeLocalService;
	}

	/**
	 * Sets the library type local service.
	 *
	 * @param libraryTypeLocalService the library type local service
	 */
	public void setLibraryTypeLocalService(
		com.idetronic.eis.service.LibraryTypeLocalService libraryTypeLocalService) {
		this.libraryTypeLocalService = libraryTypeLocalService;
	}

	/**
	 * Returns the library type persistence.
	 *
	 * @return the library type persistence
	 */
	public LibraryTypePersistence getLibraryTypePersistence() {
		return libraryTypePersistence;
	}

	/**
	 * Sets the library type persistence.
	 *
	 * @param libraryTypePersistence the library type persistence
	 */
	public void setLibraryTypePersistence(
		LibraryTypePersistence libraryTypePersistence) {
		this.libraryTypePersistence = libraryTypePersistence;
	}

	/**
	 * Returns the loan local service.
	 *
	 * @return the loan local service
	 */
	public com.idetronic.eis.service.LoanLocalService getLoanLocalService() {
		return loanLocalService;
	}

	/**
	 * Sets the loan local service.
	 *
	 * @param loanLocalService the loan local service
	 */
	public void setLoanLocalService(
		com.idetronic.eis.service.LoanLocalService loanLocalService) {
		this.loanLocalService = loanLocalService;
	}

	/**
	 * Returns the loan remote service.
	 *
	 * @return the loan remote service
	 */
	public com.idetronic.eis.service.LoanService getLoanService() {
		return loanService;
	}

	/**
	 * Sets the loan remote service.
	 *
	 * @param loanService the loan remote service
	 */
	public void setLoanService(
		com.idetronic.eis.service.LoanService loanService) {
		this.loanService = loanService;
	}

	/**
	 * Returns the loan persistence.
	 *
	 * @return the loan persistence
	 */
	public LoanPersistence getLoanPersistence() {
		return loanPersistence;
	}

	/**
	 * Sets the loan persistence.
	 *
	 * @param loanPersistence the loan persistence
	 */
	public void setLoanPersistence(LoanPersistence loanPersistence) {
		this.loanPersistence = loanPersistence;
	}

	/**
	 * Returns the non printed item type local service.
	 *
	 * @return the non printed item type local service
	 */
	public com.idetronic.eis.service.NonPrintedItemTypeLocalService getNonPrintedItemTypeLocalService() {
		return nonPrintedItemTypeLocalService;
	}

	/**
	 * Sets the non printed item type local service.
	 *
	 * @param nonPrintedItemTypeLocalService the non printed item type local service
	 */
	public void setNonPrintedItemTypeLocalService(
		com.idetronic.eis.service.NonPrintedItemTypeLocalService nonPrintedItemTypeLocalService) {
		this.nonPrintedItemTypeLocalService = nonPrintedItemTypeLocalService;
	}

	/**
	 * Returns the non printed item type remote service.
	 *
	 * @return the non printed item type remote service
	 */
	public com.idetronic.eis.service.NonPrintedItemTypeService getNonPrintedItemTypeService() {
		return nonPrintedItemTypeService;
	}

	/**
	 * Sets the non printed item type remote service.
	 *
	 * @param nonPrintedItemTypeService the non printed item type remote service
	 */
	public void setNonPrintedItemTypeService(
		com.idetronic.eis.service.NonPrintedItemTypeService nonPrintedItemTypeService) {
		this.nonPrintedItemTypeService = nonPrintedItemTypeService;
	}

	/**
	 * Returns the non printed item type persistence.
	 *
	 * @return the non printed item type persistence
	 */
	public NonPrintedItemTypePersistence getNonPrintedItemTypePersistence() {
		return nonPrintedItemTypePersistence;
	}

	/**
	 * Sets the non printed item type persistence.
	 *
	 * @param nonPrintedItemTypePersistence the non printed item type persistence
	 */
	public void setNonPrintedItemTypePersistence(
		NonPrintedItemTypePersistence nonPrintedItemTypePersistence) {
		this.nonPrintedItemTypePersistence = nonPrintedItemTypePersistence;
	}

	/**
	 * Returns the post local service.
	 *
	 * @return the post local service
	 */
	public com.idetronic.eis.service.PostLocalService getPostLocalService() {
		return postLocalService;
	}

	/**
	 * Sets the post local service.
	 *
	 * @param postLocalService the post local service
	 */
	public void setPostLocalService(
		com.idetronic.eis.service.PostLocalService postLocalService) {
		this.postLocalService = postLocalService;
	}

	/**
	 * Returns the post remote service.
	 *
	 * @return the post remote service
	 */
	public com.idetronic.eis.service.PostService getPostService() {
		return postService;
	}

	/**
	 * Sets the post remote service.
	 *
	 * @param postService the post remote service
	 */
	public void setPostService(
		com.idetronic.eis.service.PostService postService) {
		this.postService = postService;
	}

	/**
	 * Returns the post persistence.
	 *
	 * @return the post persistence
	 */
	public PostPersistence getPostPersistence() {
		return postPersistence;
	}

	/**
	 * Sets the post persistence.
	 *
	 * @param postPersistence the post persistence
	 */
	public void setPostPersistence(PostPersistence postPersistence) {
		this.postPersistence = postPersistence;
	}

	/**
	 * Returns the post category local service.
	 *
	 * @return the post category local service
	 */
	public com.idetronic.eis.service.PostCategoryLocalService getPostCategoryLocalService() {
		return postCategoryLocalService;
	}

	/**
	 * Sets the post category local service.
	 *
	 * @param postCategoryLocalService the post category local service
	 */
	public void setPostCategoryLocalService(
		com.idetronic.eis.service.PostCategoryLocalService postCategoryLocalService) {
		this.postCategoryLocalService = postCategoryLocalService;
	}

	/**
	 * Returns the post category remote service.
	 *
	 * @return the post category remote service
	 */
	public com.idetronic.eis.service.PostCategoryService getPostCategoryService() {
		return postCategoryService;
	}

	/**
	 * Sets the post category remote service.
	 *
	 * @param postCategoryService the post category remote service
	 */
	public void setPostCategoryService(
		com.idetronic.eis.service.PostCategoryService postCategoryService) {
		this.postCategoryService = postCategoryService;
	}

	/**
	 * Returns the post category persistence.
	 *
	 * @return the post category persistence
	 */
	public PostCategoryPersistence getPostCategoryPersistence() {
		return postCategoryPersistence;
	}

	/**
	 * Sets the post category persistence.
	 *
	 * @param postCategoryPersistence the post category persistence
	 */
	public void setPostCategoryPersistence(
		PostCategoryPersistence postCategoryPersistence) {
		this.postCategoryPersistence = postCategoryPersistence;
	}

	/**
	 * Returns the post grade local service.
	 *
	 * @return the post grade local service
	 */
	public com.idetronic.eis.service.PostGradeLocalService getPostGradeLocalService() {
		return postGradeLocalService;
	}

	/**
	 * Sets the post grade local service.
	 *
	 * @param postGradeLocalService the post grade local service
	 */
	public void setPostGradeLocalService(
		com.idetronic.eis.service.PostGradeLocalService postGradeLocalService) {
		this.postGradeLocalService = postGradeLocalService;
	}

	/**
	 * Returns the post grade remote service.
	 *
	 * @return the post grade remote service
	 */
	public com.idetronic.eis.service.PostGradeService getPostGradeService() {
		return postGradeService;
	}

	/**
	 * Sets the post grade remote service.
	 *
	 * @param postGradeService the post grade remote service
	 */
	public void setPostGradeService(
		com.idetronic.eis.service.PostGradeService postGradeService) {
		this.postGradeService = postGradeService;
	}

	/**
	 * Returns the post grade persistence.
	 *
	 * @return the post grade persistence
	 */
	public PostGradePersistence getPostGradePersistence() {
		return postGradePersistence;
	}

	/**
	 * Sets the post grade persistence.
	 *
	 * @param postGradePersistence the post grade persistence
	 */
	public void setPostGradePersistence(
		PostGradePersistence postGradePersistence) {
		this.postGradePersistence = postGradePersistence;
	}

	/**
	 * Returns the printed item type local service.
	 *
	 * @return the printed item type local service
	 */
	public com.idetronic.eis.service.PrintedItemTypeLocalService getPrintedItemTypeLocalService() {
		return printedItemTypeLocalService;
	}

	/**
	 * Sets the printed item type local service.
	 *
	 * @param printedItemTypeLocalService the printed item type local service
	 */
	public void setPrintedItemTypeLocalService(
		com.idetronic.eis.service.PrintedItemTypeLocalService printedItemTypeLocalService) {
		this.printedItemTypeLocalService = printedItemTypeLocalService;
	}

	/**
	 * Returns the printed item type remote service.
	 *
	 * @return the printed item type remote service
	 */
	public com.idetronic.eis.service.PrintedItemTypeService getPrintedItemTypeService() {
		return printedItemTypeService;
	}

	/**
	 * Sets the printed item type remote service.
	 *
	 * @param printedItemTypeService the printed item type remote service
	 */
	public void setPrintedItemTypeService(
		com.idetronic.eis.service.PrintedItemTypeService printedItemTypeService) {
		this.printedItemTypeService = printedItemTypeService;
	}

	/**
	 * Returns the printed item type persistence.
	 *
	 * @return the printed item type persistence
	 */
	public PrintedItemTypePersistence getPrintedItemTypePersistence() {
		return printedItemTypePersistence;
	}

	/**
	 * Sets the printed item type persistence.
	 *
	 * @param printedItemTypePersistence the printed item type persistence
	 */
	public void setPrintedItemTypePersistence(
		PrintedItemTypePersistence printedItemTypePersistence) {
		this.printedItemTypePersistence = printedItemTypePersistence;
	}

	/**
	 * Returns the project local service.
	 *
	 * @return the project local service
	 */
	public com.idetronic.eis.service.ProjectLocalService getProjectLocalService() {
		return projectLocalService;
	}

	/**
	 * Sets the project local service.
	 *
	 * @param projectLocalService the project local service
	 */
	public void setProjectLocalService(
		com.idetronic.eis.service.ProjectLocalService projectLocalService) {
		this.projectLocalService = projectLocalService;
	}

	/**
	 * Returns the project remote service.
	 *
	 * @return the project remote service
	 */
	public com.idetronic.eis.service.ProjectService getProjectService() {
		return projectService;
	}

	/**
	 * Sets the project remote service.
	 *
	 * @param projectService the project remote service
	 */
	public void setProjectService(
		com.idetronic.eis.service.ProjectService projectService) {
		this.projectService = projectService;
	}

	/**
	 * Returns the project persistence.
	 *
	 * @return the project persistence
	 */
	public ProjectPersistence getProjectPersistence() {
		return projectPersistence;
	}

	/**
	 * Sets the project persistence.
	 *
	 * @param projectPersistence the project persistence
	 */
	public void setProjectPersistence(ProjectPersistence projectPersistence) {
		this.projectPersistence = projectPersistence;
	}

	/**
	 * Returns the project activity local service.
	 *
	 * @return the project activity local service
	 */
	public com.idetronic.eis.service.ProjectActivityLocalService getProjectActivityLocalService() {
		return projectActivityLocalService;
	}

	/**
	 * Sets the project activity local service.
	 *
	 * @param projectActivityLocalService the project activity local service
	 */
	public void setProjectActivityLocalService(
		com.idetronic.eis.service.ProjectActivityLocalService projectActivityLocalService) {
		this.projectActivityLocalService = projectActivityLocalService;
	}

	/**
	 * Returns the project activity persistence.
	 *
	 * @return the project activity persistence
	 */
	public ProjectActivityPersistence getProjectActivityPersistence() {
		return projectActivityPersistence;
	}

	/**
	 * Sets the project activity persistence.
	 *
	 * @param projectActivityPersistence the project activity persistence
	 */
	public void setProjectActivityPersistence(
		ProjectActivityPersistence projectActivityPersistence) {
		this.projectActivityPersistence = projectActivityPersistence;
	}

	/**
	 * Returns the project resource remote service.
	 *
	 * @return the project resource remote service
	 */
	public com.idetronic.eis.service.ProjectResourceService getProjectResourceService() {
		return projectResourceService;
	}

	/**
	 * Sets the project resource remote service.
	 *
	 * @param projectResourceService the project resource remote service
	 */
	public void setProjectResourceService(
		com.idetronic.eis.service.ProjectResourceService projectResourceService) {
		this.projectResourceService = projectResourceService;
	}

	/**
	 * Returns the project resource persistence.
	 *
	 * @return the project resource persistence
	 */
	public ProjectResourcePersistence getProjectResourcePersistence() {
		return projectResourcePersistence;
	}

	/**
	 * Sets the project resource persistence.
	 *
	 * @param projectResourcePersistence the project resource persistence
	 */
	public void setProjectResourcePersistence(
		ProjectResourcePersistence projectResourcePersistence) {
		this.projectResourcePersistence = projectResourcePersistence;
	}

	/**
	 * Returns the project resource type remote service.
	 *
	 * @return the project resource type remote service
	 */
	public com.idetronic.eis.service.ProjectResourceTypeService getProjectResourceTypeService() {
		return projectResourceTypeService;
	}

	/**
	 * Sets the project resource type remote service.
	 *
	 * @param projectResourceTypeService the project resource type remote service
	 */
	public void setProjectResourceTypeService(
		com.idetronic.eis.service.ProjectResourceTypeService projectResourceTypeService) {
		this.projectResourceTypeService = projectResourceTypeService;
	}

	/**
	 * Returns the project resource type persistence.
	 *
	 * @return the project resource type persistence
	 */
	public ProjectResourceTypePersistence getProjectResourceTypePersistence() {
		return projectResourceTypePersistence;
	}

	/**
	 * Sets the project resource type persistence.
	 *
	 * @param projectResourceTypePersistence the project resource type persistence
	 */
	public void setProjectResourceTypePersistence(
		ProjectResourceTypePersistence projectResourceTypePersistence) {
		this.projectResourceTypePersistence = projectResourceTypePersistence;
	}

	/**
	 * Returns the project strategy local service.
	 *
	 * @return the project strategy local service
	 */
	public com.idetronic.eis.service.ProjectStrategyLocalService getProjectStrategyLocalService() {
		return projectStrategyLocalService;
	}

	/**
	 * Sets the project strategy local service.
	 *
	 * @param projectStrategyLocalService the project strategy local service
	 */
	public void setProjectStrategyLocalService(
		com.idetronic.eis.service.ProjectStrategyLocalService projectStrategyLocalService) {
		this.projectStrategyLocalService = projectStrategyLocalService;
	}

	/**
	 * Returns the project strategy persistence.
	 *
	 * @return the project strategy persistence
	 */
	public ProjectStrategyPersistence getProjectStrategyPersistence() {
		return projectStrategyPersistence;
	}

	/**
	 * Sets the project strategy persistence.
	 *
	 * @param projectStrategyPersistence the project strategy persistence
	 */
	public void setProjectStrategyPersistence(
		ProjectStrategyPersistence projectStrategyPersistence) {
		this.projectStrategyPersistence = projectStrategyPersistence;
	}

	/**
	 * Returns the state local service.
	 *
	 * @return the state local service
	 */
	public com.idetronic.eis.service.StateLocalService getStateLocalService() {
		return stateLocalService;
	}

	/**
	 * Sets the state local service.
	 *
	 * @param stateLocalService the state local service
	 */
	public void setStateLocalService(
		com.idetronic.eis.service.StateLocalService stateLocalService) {
		this.stateLocalService = stateLocalService;
	}

	/**
	 * Returns the state persistence.
	 *
	 * @return the state persistence
	 */
	public StatePersistence getStatePersistence() {
		return statePersistence;
	}

	/**
	 * Sets the state persistence.
	 *
	 * @param statePersistence the state persistence
	 */
	public void setStatePersistence(StatePersistence statePersistence) {
		this.statePersistence = statePersistence;
	}

	/**
	 * Returns the user library local service.
	 *
	 * @return the user library local service
	 */
	public com.idetronic.eis.service.UserLibraryLocalService getUserLibraryLocalService() {
		return userLibraryLocalService;
	}

	/**
	 * Sets the user library local service.
	 *
	 * @param userLibraryLocalService the user library local service
	 */
	public void setUserLibraryLocalService(
		com.idetronic.eis.service.UserLibraryLocalService userLibraryLocalService) {
		this.userLibraryLocalService = userLibraryLocalService;
	}

	/**
	 * Returns the user library remote service.
	 *
	 * @return the user library remote service
	 */
	public com.idetronic.eis.service.UserLibraryService getUserLibraryService() {
		return userLibraryService;
	}

	/**
	 * Sets the user library remote service.
	 *
	 * @param userLibraryService the user library remote service
	 */
	public void setUserLibraryService(
		com.idetronic.eis.service.UserLibraryService userLibraryService) {
		this.userLibraryService = userLibraryService;
	}

	/**
	 * Returns the user library persistence.
	 *
	 * @return the user library persistence
	 */
	public UserLibraryPersistence getUserLibraryPersistence() {
		return userLibraryPersistence;
	}

	/**
	 * Sets the user library persistence.
	 *
	 * @param userLibraryPersistence the user library persistence
	 */
	public void setUserLibraryPersistence(
		UserLibraryPersistence userLibraryPersistence) {
		this.userLibraryPersistence = userLibraryPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();

		PersistedModelLocalServiceRegistryUtil.register("com.idetronic.eis.model.Post",
			postLocalService);
	}

	public void destroy() {
		PersistedModelLocalServiceRegistryUtil.unregister(
			"com.idetronic.eis.model.Post");
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return Post.class;
	}

	protected String getModelClassName() {
		return Post.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = postPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.idetronic.eis.service.FacultyLocalService.class)
	protected com.idetronic.eis.service.FacultyLocalService facultyLocalService;
	@BeanReference(type = com.idetronic.eis.service.FacultyService.class)
	protected com.idetronic.eis.service.FacultyService facultyService;
	@BeanReference(type = FacultyPersistence.class)
	protected FacultyPersistence facultyPersistence;
	@BeanReference(type = com.idetronic.eis.service.FacultyTypeLocalService.class)
	protected com.idetronic.eis.service.FacultyTypeLocalService facultyTypeLocalService;
	@BeanReference(type = com.idetronic.eis.service.FacultyTypeService.class)
	protected com.idetronic.eis.service.FacultyTypeService facultyTypeService;
	@BeanReference(type = FacultyTypePersistence.class)
	protected FacultyTypePersistence facultyTypePersistence;
	@BeanReference(type = com.idetronic.eis.service.ItemMediumLocalService.class)
	protected com.idetronic.eis.service.ItemMediumLocalService itemMediumLocalService;
	@BeanReference(type = com.idetronic.eis.service.ItemMediumService.class)
	protected com.idetronic.eis.service.ItemMediumService itemMediumService;
	@BeanReference(type = ItemMediumPersistence.class)
	protected ItemMediumPersistence itemMediumPersistence;
	@BeanReference(type = com.idetronic.eis.service.ItemTypeCategoryLocalService.class)
	protected com.idetronic.eis.service.ItemTypeCategoryLocalService itemTypeCategoryLocalService;
	@BeanReference(type = com.idetronic.eis.service.ItemTypeCategoryService.class)
	protected com.idetronic.eis.service.ItemTypeCategoryService itemTypeCategoryService;
	@BeanReference(type = ItemTypeCategoryPersistence.class)
	protected ItemTypeCategoryPersistence itemTypeCategoryPersistence;
	@BeanReference(type = com.idetronic.eis.service.LibraryLocalService.class)
	protected com.idetronic.eis.service.LibraryLocalService libraryLocalService;
	@BeanReference(type = LibraryPersistence.class)
	protected LibraryPersistence libraryPersistence;
	@BeanReference(type = com.idetronic.eis.service.LibraryTypeLocalService.class)
	protected com.idetronic.eis.service.LibraryTypeLocalService libraryTypeLocalService;
	@BeanReference(type = LibraryTypePersistence.class)
	protected LibraryTypePersistence libraryTypePersistence;
	@BeanReference(type = com.idetronic.eis.service.LoanLocalService.class)
	protected com.idetronic.eis.service.LoanLocalService loanLocalService;
	@BeanReference(type = com.idetronic.eis.service.LoanService.class)
	protected com.idetronic.eis.service.LoanService loanService;
	@BeanReference(type = LoanPersistence.class)
	protected LoanPersistence loanPersistence;
	@BeanReference(type = com.idetronic.eis.service.NonPrintedItemTypeLocalService.class)
	protected com.idetronic.eis.service.NonPrintedItemTypeLocalService nonPrintedItemTypeLocalService;
	@BeanReference(type = com.idetronic.eis.service.NonPrintedItemTypeService.class)
	protected com.idetronic.eis.service.NonPrintedItemTypeService nonPrintedItemTypeService;
	@BeanReference(type = NonPrintedItemTypePersistence.class)
	protected NonPrintedItemTypePersistence nonPrintedItemTypePersistence;
	@BeanReference(type = com.idetronic.eis.service.PostLocalService.class)
	protected com.idetronic.eis.service.PostLocalService postLocalService;
	@BeanReference(type = com.idetronic.eis.service.PostService.class)
	protected com.idetronic.eis.service.PostService postService;
	@BeanReference(type = PostPersistence.class)
	protected PostPersistence postPersistence;
	@BeanReference(type = com.idetronic.eis.service.PostCategoryLocalService.class)
	protected com.idetronic.eis.service.PostCategoryLocalService postCategoryLocalService;
	@BeanReference(type = com.idetronic.eis.service.PostCategoryService.class)
	protected com.idetronic.eis.service.PostCategoryService postCategoryService;
	@BeanReference(type = PostCategoryPersistence.class)
	protected PostCategoryPersistence postCategoryPersistence;
	@BeanReference(type = com.idetronic.eis.service.PostGradeLocalService.class)
	protected com.idetronic.eis.service.PostGradeLocalService postGradeLocalService;
	@BeanReference(type = com.idetronic.eis.service.PostGradeService.class)
	protected com.idetronic.eis.service.PostGradeService postGradeService;
	@BeanReference(type = PostGradePersistence.class)
	protected PostGradePersistence postGradePersistence;
	@BeanReference(type = com.idetronic.eis.service.PrintedItemTypeLocalService.class)
	protected com.idetronic.eis.service.PrintedItemTypeLocalService printedItemTypeLocalService;
	@BeanReference(type = com.idetronic.eis.service.PrintedItemTypeService.class)
	protected com.idetronic.eis.service.PrintedItemTypeService printedItemTypeService;
	@BeanReference(type = PrintedItemTypePersistence.class)
	protected PrintedItemTypePersistence printedItemTypePersistence;
	@BeanReference(type = com.idetronic.eis.service.ProjectLocalService.class)
	protected com.idetronic.eis.service.ProjectLocalService projectLocalService;
	@BeanReference(type = com.idetronic.eis.service.ProjectService.class)
	protected com.idetronic.eis.service.ProjectService projectService;
	@BeanReference(type = ProjectPersistence.class)
	protected ProjectPersistence projectPersistence;
	@BeanReference(type = com.idetronic.eis.service.ProjectActivityLocalService.class)
	protected com.idetronic.eis.service.ProjectActivityLocalService projectActivityLocalService;
	@BeanReference(type = ProjectActivityPersistence.class)
	protected ProjectActivityPersistence projectActivityPersistence;
	@BeanReference(type = com.idetronic.eis.service.ProjectResourceService.class)
	protected com.idetronic.eis.service.ProjectResourceService projectResourceService;
	@BeanReference(type = ProjectResourcePersistence.class)
	protected ProjectResourcePersistence projectResourcePersistence;
	@BeanReference(type = com.idetronic.eis.service.ProjectResourceTypeService.class)
	protected com.idetronic.eis.service.ProjectResourceTypeService projectResourceTypeService;
	@BeanReference(type = ProjectResourceTypePersistence.class)
	protected ProjectResourceTypePersistence projectResourceTypePersistence;
	@BeanReference(type = com.idetronic.eis.service.ProjectStrategyLocalService.class)
	protected com.idetronic.eis.service.ProjectStrategyLocalService projectStrategyLocalService;
	@BeanReference(type = ProjectStrategyPersistence.class)
	protected ProjectStrategyPersistence projectStrategyPersistence;
	@BeanReference(type = com.idetronic.eis.service.StateLocalService.class)
	protected com.idetronic.eis.service.StateLocalService stateLocalService;
	@BeanReference(type = StatePersistence.class)
	protected StatePersistence statePersistence;
	@BeanReference(type = com.idetronic.eis.service.UserLibraryLocalService.class)
	protected com.idetronic.eis.service.UserLibraryLocalService userLibraryLocalService;
	@BeanReference(type = com.idetronic.eis.service.UserLibraryService.class)
	protected com.idetronic.eis.service.UserLibraryService userLibraryService;
	@BeanReference(type = UserLibraryPersistence.class)
	protected UserLibraryPersistence userLibraryPersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private PostLocalServiceClpInvoker _clpInvoker = new PostLocalServiceClpInvoker();
}